---
- hosts: "{{hosts | default('all')}}"
  roles:
    - cumulus
    - common
  user: cumulus
  become: True
  gather_facts: yes
  tasks:
    # set root password
    - name: Setting root password to 'cn321'
      user: name=root password="$6$E.DRdQpDf$qbzP/lrG96ll7npIABuE/3NIO0L2ItDrOjAZEX9G4Lq9keJWMygSlw9BCNkLxqafdV/qOO6BUKy5i5JDoOxM10"
      tags:
        - password
    # .alias
    - name: check that alias file exists
      become: false
      local_action: stat path=roles/cumulus/files/root/alias
      register: stat_result
    - name: copy .alias file
      when: stat_result.stat.exists == True
      copy: src=roles/cumulus/files/root/alias dest=/root/.alias
    # .bashrc
    - name: check that bashrc file exists
      become: false
      local_action: stat path=roles/cumulus/files/root/bashrc
      register: stat_result
    - name: copy .bashrc file
      when: stat_result.stat.exists == True
      copy: src=roles/cumulus/files/root/bashrc dest=/root/.bashrc
    # .profile
    - name: check that profile file exists
      become: false
      local_action: stat path=roles/cumulus/files/root/profile
      register: stat_result
    - name: copy .profile file
      when: stat_result.stat.exists == True
      copy: src=roles/cumulus/files/root/profile dest=/root/.profile
    # topology.dot
    - name: Check that etc/ptm.d/topology.dot exists
      become: false
      local_action: stat path=roles/cumulus/files/etc/ptm.d/topology.dot
      register: stat_result
    - name: copy /etc/ptm.d/topology.dot
      when: stat_result.stat.exists == True
      copy: src=roles/cumulus/files/etc/ptm.d/topology.dot dest=/etc/ptm.d/topology.dot
    # /usr/local/bin
    - name: Check that usr/local/bin directory exists
      become: false
      local_action: stat path=roles/cumulus/files/usr/local/bin/
      register: stat_result
    - name: copy /usr/local/bin directory
      when: stat_result.stat.exists == True
      copy: src=roles/cumulus/files/usr/local/bin/ dest=/usr/local/bin/ owner=root group=staff mode="u+rwx,g+rx,o+rx"
    # cumulus linux license file
    - name: check that license file exists
      become: false
      local_action: stat path=roles/cumulus/files/etc/cumulus/.license
      register: stat_result
      tags:
        - license
    - name: copy license file to /etc/cumulus/
      copy: src=roles/cumulus/files/etc/cumulus/.license dest=/etc/cumulus/.license
      notify:
        - restart switchd
      when: stat_result.stat.exists == True and ansible_product_name != "VirtualBox"
      tags:
        - license
    - name: ensure that /mnt/persist/etc/cumulus/ exists
      file: path=/mnt/persist/etc/cumulus/ state=directory
      when: "'{{ansible_product_name}}' != 'VirtualBox'"
      tags:
        - license
    - name: copy license file to /mnt/persist/etc/cumulus/
      copy: src=roles/cumulus/files/etc/cumulus/.license dest=/mnt/persist/etc/cumulus/.license
      when: stat_result.stat.exists == True and ansible_product_name != "VirtualBox"
      tags:
        - license
    # configure the timezone
    - name: ensure that timezone file exists
      become: false
      local_action: stat path=roles/cumulus/files/etc/timezone
      register: stat_result
    - name: copy timezone file to /etc/timezone
      copy: src=roles/cumulus/files/etc/timezone dest=/etc/timezone
      when: stat_result.stat.exists == True
    - name: dpkg-reconfigure tzdata so right time is displayed by date command
      command: dpkg-reconfigure --frontend noninteractive tzdata
    # load wheezy repo and install extra packages
    - name: load wheezy repo
      copy: src=roles/cumulus/files/wheezy.list dest=/etc/apt/sources.list.d/wheezy.list
      tags:
        - repos
    - name: install apt-utils
      apt: name=apt-utils default_release=wheezy
      tags:
        - packages
    - name: install vim
      apt: name=vim default_release=wheezy
      tags:
        - packages
    - name: install tshark
      apt: name=tshark default_release=wheezy
      tags:
        - packages
    - name: install bwm-ng
      apt: name=bwm-ng default_release=wheezy
      tags:
        - packages
    # add source /etc/network/interfaces.d/*
    - name: Add source /etc/network/interfaces.d/*
      lineinfile: dest=/etc/network/interfaces state=present line='source /etc/network/interfaces.d/*' insertbefore=BOF
      become: yes
    # add a blank file (/etc/network/interfaces.d/blank.cfg) to stop the no sources error on ifreload -a
    - name: ensure that /etc/network/interfaces.d/blank.cfg exists
      become: false
      local_action: stat path=roles/cumulus/files/etc/network/interfaces.d/blank.cfg
      register: stat_result
    - name: copy blank.cfg to stop source error on ifreload -a
      copy: src=roles/cumulus/files/etc/network/interfaces.d/blank.cfg dest=/etc/network/interfaces.d/blank.cfg
      when: stat_result.stat.exists == True
